displayの使い方：
参考サイト：https://saruwakakun.com/html-css/basic/display
要素の表示形式を決めるもの
使用プロパティ4種
・block
  p、div、ul、h1〜h6などのタグの初期値はコレ
・inline
  a、span、imgなどのタグの初期値はコレ
・inline-block
・none

「pタグはblock」「aタグはinline」というようにタグごとにdisplayプロパティの初期値が決まっている。
それぞれの値のイメージ：

・block⇒要素が横までいっぱいに広がり、縦に並んでいく
・inline⇒要素が平ぺったく横に並んでいく
・inline-block⇒blockとinlineの中間
・none⇒非表示になる

display: blockとは？
  divタグやpタグ、h1~h6の見出しタグなどは、指定しなくてもはじめからblock
block：
要素：縦
幅/高さ：指定可能
padding/margin：全方向指定可能
text-align：指定できない
  【参考】blockの要素を中央配置
    CSS中級者向けのお話です。blockの要素を中央に配置したいときにはmargin-right:auto; margin-left:autoという指定により横に中央配置にすることができます。
vertical-align：指定できない

display: inlineとは？
  spanタグやaタグ、imgタグなどは指定しなくても、初期値がinline
  inlineはおもに文中の一部として使われる。
  基本的にはblockの中で用いられる
inline：
要素：横並び
幅/高さ：指定不可
padding/margin：左右のみ指定可能（上下のpaddingは反映こそされるが、要素とぶつかり合うので実質使用できないが正しい）
text-align：指定できる（親要素に対して指定）
vertical-align：指定できる

inline-block：
要素：横並び
幅/高さ：blockと同じで指定可能
padding/margin：blockとおなじで、全方向
text-align：inlineと同じで指定できる（親要素に対して指定）
vertical-align：inlineと同じで指定できる


display:tableについて
親要素にdisplay:tableを記入
子要素に display: table-cell;を記入
  text-align: center;　横並びの中央に揃える
  vertical-align: middle;　縦方向の中央に揃える

class複数の指定方法
<div class="class1 class2">
,や別途""で囲う必要はない""の中で半角空けて記入するだけ

flex：
flexのプロパティ：
flex-grow
flex-shrink
flex-basis

<style type="text/css" scoped>
ul {
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-align-items: center;
    align-items: center;
    height: 200px;
}　

display：flex　使用プロパティ
  justify-content: space-around; /*主軸に対し均等間隔に配置*/
  flex-direction: column; /*垂直方向に並ぶ*/

position:
要素の位置を決めるプロパティ
positionの値4種のみ：
static：初期値はこれ。指定することはほとんどない
relative：現在の位置を基準に相対的な位置を決める
absolute：親要素を基準に絶対的な位置を決める
fixed：画面のきまった位置に固定する　←今回はここを使いそう

基本的な使い方
positonで基準を決める
top bottom left rightで具体的な位置を数字で調整


q4：
テーブル作成　※難しい
table-layout：
参考サイト
https://developer.mozilla.org/ja/docs/Web/CSS/table-layout
auto
fixed
の2種類がある。
widthの設定により記載が異なる

  overflow: hidden;　長い文字を省略文字にする
  white-space: nowrap;　わからない
  text-overflow: ellipsis;　わからない

border-collapseとは：
値は2種類
collapse;　セルが折り畳まれている場合 (collapse)、 border-style の値で inset が ridge のように動作し、 outset が groove のように動作。
separate;(separate)、セル間の距離は border-spacing プロパティで定義される。
/* キーワード値 */
border-collapse: collapse;
border-collapse: separate;

/* グローバル値 */
border-collapse: inherit;
border-collapse: initial;
border-collapse: revert;
border-collapse: revert-layer;
border-collapse: unset;

グローバル値とは
すべての要素で共通で使われる値
よってキーワード値では、プロパティオリジナルの値である。
グローバル値は値の意味がわかれば使い回せる可能性が高い

table-layoutプロパティを使うことで、tableのセルや行、または列のレイアウトを調整する事ができる。
セルの幅を自動的に均等にすることもできる便利なプロパティ。
table-layoutでできること：
auto	幅と中身は要素のに合うよう自動的に調整。（初期値）
fixed	widthによって指定された値が列の幅となる。指定のない場合は均等に調整。

:nth-child 使い方：
/* リスト中の 2 番目の <li> 要素を選択 */
li:nth-child(2) {
  color: lime;
}

/* 兄弟要素の中で 3 つおきに要素を選択 */
:nth-child(4n) {
  color: lime;
}
:nth-child(n+7)
7 番目とそれ以降のすべての要素を表します。 7 番目 [=0+7]、8 番目 [=1+7]、9 番目 [=2+7]、等です。

:nth-child(3n+4)
4 番目 [=(3×0)+4]、7 番目 [=(3×1)+4]、10 番目 [=(3×2)+4]、13 番目 [=(3×3)+4]、等の要素を表します。

:nth-child(-n+3)
兄弟要素のグループの中で最初の 3 つの要素を表します。 [=-0+3, -1+3, -2+3]

:last-childとは：
last-childは要素の最後のみにCSSを適用するための疑似クラス
No	書き方	意味
1	:first-child	最初
2	:last-child	最後
3	:nth-child(n)	n番目
4	:nth-last-child(n)	後ろからn番目


ブロック要素を可変で並べて作成する方法：
参照：
https://wreath-ent.co.jp/web-design/how-to-change-while-maintaining-the-ratio-of-block-elements-with-css/

ポイント
親要素と子要素で連携する場合直下に子要素を作成する必要がある。
親要素と子要素の間に、別タグが入るとうまく連携されない。
